<?xml version="1.0"?>
<project
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
	xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.beyond.net</groupId>
		<artifactId>beyond-parent</artifactId>
		<version>1.0</version>
	</parent>
	<groupId>com.beyond.net</groupId>
	<artifactId>beyond-dl4j</artifactId>
	<version>1.0</version>
	<name>beyond-dl4j</name>
	<url>http://maven.apache.org</url>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<!-- Change the nd4j.backend property to nd4j-cuda-7.5-platform or nd4j-cuda-8.0-platform  to use CUDA GPUs -->
		<nd4j.backend>nd4j-native-platform</nd4j.backend>
		<!-- <nd4j.backend>nd4j-cuda-8.0-platform</nd4j.backend> -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<shadedClassifier>bin</shadedClassifier>

		<java.version>1.8</java.version>
		<nd4j.version>0.9.1</nd4j.version>
		<dl4j.version>0.9.1</dl4j.version>
		<datavec.version>0.9.1</datavec.version>
		<arbiter.version>0.9.1</arbiter.version>
		<rl4j.version>0.9.1</rl4j.version>
		<!-- Scala binary version: DL4J's Spark and UI functionality are released with both Scala 2.10 and 2.11 support -->
		<scala.binary.version>2.11</scala.binary.version>

		<slf4j.version>1.7.16</slf4j.version>
		<log4j.version>2.8.1</log4j.version>
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.nd4j</groupId>
				<artifactId>nd4j-native-platform</artifactId>
				<version>${nd4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.nd4j</groupId>
				<artifactId>nd4j-cuda-7.5-platform</artifactId>
				<version>${nd4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.nd4j</groupId>
				<artifactId>nd4j-cuda-8.0-platform</artifactId>
				<version>${nd4j.version}</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<!-- ND4J backend. You need one in every DL4J project. Normally define 
			artifactId as either "nd4j-native-platform" or "nd4j-cuda-7.5-platform" -->
		<dependency>
			<groupId>org.nd4j</groupId>
			<artifactId>${nd4j.backend}</artifactId>
			<version>${nd4j.version}</version>
		</dependency>

		<!-- Core DL4J functionality -->
		<dependency>
			<groupId>org.deeplearning4j</groupId>
			<artifactId>deeplearning4j-core</artifactId>
			<version>${dl4j.version}</version>
		</dependency>

		<dependency>
			<groupId>org.deeplearning4j</groupId>
			<artifactId>deeplearning4j-nlp</artifactId>
			<version>${dl4j.version}</version>
		</dependency>

		<dependency>
			<groupId>org.deeplearning4j</groupId>
			<artifactId>deeplearning4j-zoo</artifactId>
			<version>${dl4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.datavec</groupId>
			<artifactId>datavec-data-image</artifactId>
			<version>${dl4j.version}</version>
		</dependency>

		<!-- deeplearning4j-ui is used for visualization: see http://deeplearning4j.org/visualization -->
		<dependency>
			<groupId>org.deeplearning4j</groupId>
			<artifactId>deeplearning4j-ui_${scala.binary.version}</artifactId>
			<version>${dl4j.version}</version>
		</dependency>

		<!-- ParallelWrapper & ParallelInference live here -->
		<dependency>
			<groupId>org.deeplearning4j</groupId>
			<artifactId>deeplearning4j-parallel-wrapper_${scala.binary.version}</artifactId>
			<version>${dl4j.version}</version>
		</dependency>

		<dependency>
			<groupId>org.bytedeco.javacpp-presets</groupId>
			<artifactId>ffmpeg</artifactId>
			<version>3.4.1-1.4</version>
		</dependency>

		<dependency>
			<groupId>org.bytedeco.javacpp-presets</groupId>
			<artifactId>ffmpeg-platform</artifactId>
			<version>3.4.1-1.4</version>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
	</dependencies>
</project>
